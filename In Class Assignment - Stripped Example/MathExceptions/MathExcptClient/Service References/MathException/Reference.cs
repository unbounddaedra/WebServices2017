//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MathExcptClient.MathException {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MathException.IMathException")]
    public interface IMathException {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMathException/DivisionExample", ReplyAction="http://tempuri.org/IMathException/DivisionExampleResponse")]
        string DivisionExample(int numerator, int denominator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMathException/DivisionExample", ReplyAction="http://tempuri.org/IMathException/DivisionExampleResponse")]
        System.Threading.Tasks.Task<string> DivisionExampleAsync(int numerator, int denominator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMathException/FormattingError", ReplyAction="http://tempuri.org/IMathException/FormattingErrorResponse")]
        string FormattingError(string Number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMathException/FormattingError", ReplyAction="http://tempuri.org/IMathException/FormattingErrorResponse")]
        System.Threading.Tasks.Task<string> FormattingErrorAsync(string Number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMathException/DivisionExampleSoapMessage", ReplyAction="http://tempuri.org/IMathException/DivisionExampleSoapMessageResponse")]
        string DivisionExampleSoapMessage(int numerator, int denominator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMathException/DivisionExampleSoapMessage", ReplyAction="http://tempuri.org/IMathException/DivisionExampleSoapMessageResponse")]
        System.Threading.Tasks.Task<string> DivisionExampleSoapMessageAsync(int numerator, int denominator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMathException/FormattingErrorSoapMessage", ReplyAction="http://tempuri.org/IMathException/FormattingErrorSoapMessageResponse")]
        string FormattingErrorSoapMessage(string Number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMathException/FormattingErrorSoapMessage", ReplyAction="http://tempuri.org/IMathException/FormattingErrorSoapMessageResponse")]
        System.Threading.Tasks.Task<string> FormattingErrorSoapMessageAsync(string Number);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMathExceptionChannel : MathExcptClient.MathException.IMathException, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MathExceptionClient : System.ServiceModel.ClientBase<MathExcptClient.MathException.IMathException>, MathExcptClient.MathException.IMathException {
        
        public MathExceptionClient() {
        }
        
        public MathExceptionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MathExceptionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MathExceptionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MathExceptionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string DivisionExample(int numerator, int denominator) {
            return base.Channel.DivisionExample(numerator, denominator);
        }
        
        public System.Threading.Tasks.Task<string> DivisionExampleAsync(int numerator, int denominator) {
            return base.Channel.DivisionExampleAsync(numerator, denominator);
        }
        
        public string FormattingError(string Number) {
            return base.Channel.FormattingError(Number);
        }
        
        public System.Threading.Tasks.Task<string> FormattingErrorAsync(string Number) {
            return base.Channel.FormattingErrorAsync(Number);
        }
        
        public string DivisionExampleSoapMessage(int numerator, int denominator) {
            return base.Channel.DivisionExampleSoapMessage(numerator, denominator);
        }
        
        public System.Threading.Tasks.Task<string> DivisionExampleSoapMessageAsync(int numerator, int denominator) {
            return base.Channel.DivisionExampleSoapMessageAsync(numerator, denominator);
        }
        
        public string FormattingErrorSoapMessage(string Number) {
            return base.Channel.FormattingErrorSoapMessage(Number);
        }
        
        public System.Threading.Tasks.Task<string> FormattingErrorSoapMessageAsync(string Number) {
            return base.Channel.FormattingErrorSoapMessageAsync(Number);
        }
    }
}
